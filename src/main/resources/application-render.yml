# Configuración para producción en Render
spring:
  # Base de datos - Se configura programáticamente en DatabaseConfig
  datasource:
    # Solo declaramos que el driver existe - la configuración real está en DatabaseConfig.java
    driver-class-name: org.postgresql.Driver
  
  # JPA/Hibernate - CONFIGURACIÓN MEJORADA PARA RENDER
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        # NO especificar dialect ya que se autodetecta
        format_sql: false
        jdbc:
          lob:
            non_contextual_creation: true
        # Configuración específica para evitar problemas de conexión
        temp:
          use_jdbc_metadata_defaults: false
        connection:
          handling_mode: delayed_acquisition_and_release_after_transaction
        hbm2ddl:
          auto: update
    # Configuración de datasource
    defer-datasource-initialization: true
    open-in-view: false
  
  # Flyway deshabilitado temporalmente
  flyway:
    enabled: false

# Configuración del servidor
server:
  port: ${PORT:10000}
  # Configuración adicional para Render
  tomcat:
    threads:
      max: 10
      min-spare: 2

# Configuración management para health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always
  # Configuración optimizada para Render
  tomcat:
    connection-timeout: 20000
    keep-alive-timeout: 20000
    max-connections: 100
    threads:
      max: 20
      min-spare: 5
  error:
    include-message: always
    include-binding-errors: always

# JWT
api:
  security:
    token:
      secret: ${JWT_SECRET}

# Logging para producción
logging:
  level:
    com.forohub: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
