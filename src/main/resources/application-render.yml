# Configuración para producción en Render
spring:
  # Base de datos PostgreSQL - CONFIGURACIÓN DIRECTA SIN COMPLICACIONES
  datasource:
    url: ${DATABASE_URL}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 3
      minimum-idle: 1
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
      data-source-properties:
        stringtype: unspecified
        ApplicationName: ForoHub

  # JPA/Hibernate - CONFIGURACIÓN SIMPLE PARA POSTGRESQL
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: false
        jdbc:
          lob:
            non_contextual_creation: true
    defer-datasource-initialization: true
    open-in-view: false

  # Flyway deshabilitado para evitar conflictos
  flyway:
    enabled: false# Configuración del servidor
server:
  port: ${PORT:10000}
  # Configuración adicional para Render
  tomcat:
    threads:
      max: 10
      min-spare: 2

# Configuración management para health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always
  # Configuración optimizada para Render
  tomcat:
    connection-timeout: 20000
    keep-alive-timeout: 20000
    max-connections: 100
    threads:
      max: 20
      min-spare: 5
  error:
    include-message: always
    include-binding-errors: always

# JWT
api:
  security:
    token:
      secret: ${JWT_SECRET}

# Logging para producción
logging:
  level:
    com.forohub: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
